<Activity mc:Ignorable="sap sap2010" x:Class="TC001" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="1201.3333333333333,15658.666666666666" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:ad="clr-namespace:atUipath_Group1001_printSolutionlib.DLICPolicyForms;assembly=atUipath.Group1001.printSolutionlib" xmlns:ap="clr-namespace:atUipath_Group1001_printSolutionlib.PDF;assembly=atUipath.Group1001.printSolutionlib" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uj="clr-namespace:UiPath_Utilities.Json;assembly=UiPath_Utilities" xmlns:ur="clr-namespace:UiPath_Utilities.Report;assembly=UiPath_Utilities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath_Utilities.Report</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>ReporterForUiPath.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>ReporterForUiPath.Enums</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath_Utilities.Json</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>DocumentFormat.OpenXml.Vml.Spreadsheet</x:String>
      <x:String>DocumentFormat.OpenXml</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>atUipath_Group1001_printSolutionlib.PDF</x:String>
      <x:String>UiPath.PDF.Activities.PDF</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.PDF</x:String>
      <x:String>UiPath.Vision.Core.OCR</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>atUipath_Group1001_printSolutionlib.StorageBucket</x:String>
      <x:String>atUipath_Group1001_printSolutionlib.DLICPolicyForms</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath_Utilities</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>ReporterForUiPath.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Jira.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Windows.Forms.Design</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>ReporterForUiPath</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>DocumentFormat.OpenXml</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>atUipath.Group1001.printSolutionlib</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="944,13668" sap2010:WorkflowViewState.IdRef="Sequence_24">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="str_formNumber" />
      <Variable x:TypeArguments="x:String" Name="str_policyFooter" />
      <Variable x:TypeArguments="x:String" Name="str_policyFormNumber" />
      <Variable x:TypeArguments="x:Int32" Name="int_basedocIterator" />
      <Variable x:TypeArguments="x:Int32" Name="int_policydocIterator" />
      <Variable x:TypeArguments="x:String" Name="str_baselieRowtext" />
      <Variable x:TypeArguments="x:String" Name="str_policyRowtext" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="output_policyDifferences" />
      <Variable x:TypeArguments="x:Int32" Name="int_differences" />
      <Variable x:TypeArguments="x:String" Name="str_expectedPDFresult" />
      <Variable x:TypeArguments="x:Int32" Name="int_policyDiff" />
      <Variable x:TypeArguments="x:String" Name="str_actualResult" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="944,13644.8" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence DisplayName="TC001" sap:VirtualizedContainerService.HintSize="907.2,13390.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="str_suiteName" />
            <Variable x:TypeArguments="x:Int32" Name="str_reportID" />
            <Variable x:TypeArguments="x:String" Name="str_suiteID" />
            <Variable x:TypeArguments="x:String" Name="str_reportsLocation" />
            <Variable x:TypeArguments="x:String" Name="str_configLocation" />
            <Variable x:TypeArguments="x:String" Name="str_testName" />
            <Variable x:TypeArguments="x:String" Name="str_testID" />
            <Variable x:TypeArguments="scg:List(x:String)" Name="output_differences" />
            <Variable x:TypeArguments="x:String" Name="str_pdfText" />
            <Variable x:TypeArguments="x:String" Name="str_pdfTextfile" />
            <Variable x:TypeArguments="x:String" Name="str_baselinePdf" />
            <Variable x:TypeArguments="x:String" Name="str_policyPDF" />
            <Variable x:TypeArguments="x:Int32" Name="int_baselinePDFcnt" />
            <Variable x:TypeArguments="x:String" Name="str_baselinePageoutput" />
            <Variable x:TypeArguments="x:String" Name="str_policyPageoutput" />
            <Variable x:TypeArguments="x:String" Name="str_baselinePDFText" />
            <Variable x:TypeArguments="x:String" Name="str_policyPDFText" />
            <Variable x:TypeArguments="s:String[]" Name="out_str1_array" />
            <Variable x:TypeArguments="s:String[]" Name="out_str2_array" />
            <Variable x:TypeArguments="x:String" Name="str_pdfpageNum" />
            <Variable x:TypeArguments="x:Boolean" Name="tr_xdvdf" />
            <Variable x:TypeArguments="x:Boolean" Name="bool_fileexisstasdasd" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="873.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">
                  <CSharpReference.Result>
                    <OutArgument x:TypeArguments="Location(x:String)" />
                  </CSharpReference.Result>str_configLocation</CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_92">Environment.CurrentDirectory+"\\TestData\\GlobalConfig.json"</CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="873.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_17">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_53">
                  <CSharpReference.Result>
                    <OutArgument x:TypeArguments="Location(x:String)" />
                  </CSharpReference.Result>str_testName</CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">AZ PS100050004-T</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="873.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">
                  <CSharpReference.Result>
                    <OutArgument x:TypeArguments="Location(x:String)" />
                  </CSharpReference.Result>str_pdfTextfile</CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_135">Environment.CurrentDirectory+"\\OutputFiles\\PDFComparision"+str_testName+".txt"</CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="873.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_8">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_37">str_reportsLocation</CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_82">Environment.CurrentDirectory+"\\Reports\\"</CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="873.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_9">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_38">str_baselinePdf</CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_310">Environment.CurrentDirectory+"\\InputPDFFiles\\ControlPDFFiles\\AZ PS100050004-T.pdf"</CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="873.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_10">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_39">str_policyPDF</CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_311">Environment.CurrentDirectory+"\\InputPDFFiles\\TestPDFFiles\\AZ PS100050004-T.pdf"</CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="PDFPageNumber" CacheStrategy="None" DisplayName="Get Asset" FolderPath="Shared" sap:VirtualizedContainerService.HintSize="873.6,175.2" sap2010:WorkflowViewState.IdRef="GetRobotAsset_2">
            <ui:GetRobotAsset.Value>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">str_pdfpageNum</CSharpReference>
              </OutArgument>
            </ui:GetRobotAsset.Value>
          </ui:GetRobotAsset>
          <Sequence DisplayName="Fetch values from Json" sap:VirtualizedContainerService.HintSize="873.6,100.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <uj:fetchValueFromJSON sap:VirtualizedContainerService.HintSize="416,226.4" sap2010:WorkflowViewState.IdRef="fetchValueFromJSON_2" str_in_JsonKey="SuiteName">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <uj:fetchValueFromJSON.str_in_configLocation>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_94">Environment.CurrentDirectory+"\\TestData\\GlobalConfig.json"</CSharpValue>
                </InArgument>
              </uj:fetchValueFromJSON.str_in_configLocation>
              <uj:fetchValueFromJSON.str_out_JOutput>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>str_suiteName</CSharpReference>
                </OutArgument>
              </uj:fetchValueFromJSON.str_out_JOutput>
            </uj:fetchValueFromJSON>
            <uj:fetchValueFromJSON sap:VirtualizedContainerService.HintSize="416,217.6" sap2010:WorkflowViewState.IdRef="fetchValueFromJSON_3" str_in_JsonKey="AZ_policyFormFormat">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <uj:fetchValueFromJSON.str_in_configLocation>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_148">Environment.CurrentDirectory+"\\TestData\\GlobalConfig.json"</CSharpValue>
                </InArgument>
              </uj:fetchValueFromJSON.str_in_configLocation>
              <uj:fetchValueFromJSON.str_out_JOutput>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_58">str_policyFooter</CSharpReference>
                </OutArgument>
              </uj:fetchValueFromJSON.str_out_JOutput>
            </uj:fetchValueFromJSON>
          </Sequence>
          <ur:startReport sap:VirtualizedContainerService.HintSize="873.6,382.4" sap2010:WorkflowViewState.IdRef="startReport_1">
            <ur:startReport.int_out_ReportId>
              <OutArgument x:TypeArguments="x:Int32">
                <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">
                  <CSharpReference.Result>
                    <OutArgument x:TypeArguments="Location(x:Int32)" />
                  </CSharpReference.Result>str_reportID</CSharpReference>
              </OutArgument>
            </ur:startReport.int_out_ReportId>
            <ur:startReport.str_in_configLocation>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">
                  <CSharpValue.Result>
                    <OutArgument x:TypeArguments="x:String" />
                  </CSharpValue.Result>str_configLocation</CSharpValue>
              </InArgument>
            </ur:startReport.str_in_configLocation>
            <ur:startReport.str_in_reportLocation>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">
                  <CSharpValue.Result>
                    <OutArgument x:TypeArguments="x:String" />
                  </CSharpValue.Result>str_reportsLocation</CSharpValue>
              </InArgument>
            </ur:startReport.str_in_reportLocation>
            <ur:startReport.str_in_suiteName>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">
                  <CSharpValue.Result>
                    <OutArgument x:TypeArguments="x:String" />
                  </CSharpValue.Result>str_suiteName</CSharpValue>
              </InArgument>
            </ur:startReport.str_in_suiteName>
            <ur:startReport.str_in_testName>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">
                  <CSharpValue.Result>
                    <OutArgument x:TypeArguments="x:String" />
                  </CSharpValue.Result>str_testName</CSharpValue>
              </InArgument>
            </ur:startReport.str_in_testName>
            <ur:startReport.str_out_SuiteId>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">
                  <CSharpReference.Result>
                    <OutArgument x:TypeArguments="Location(x:String)" />
                  </CSharpReference.Result>str_suiteID</CSharpReference>
              </OutArgument>
            </ur:startReport.str_out_SuiteId>
          </ur:startReport>
          <ur:startTest sap:VirtualizedContainerService.HintSize="873.6,278.4" sap2010:WorkflowViewState.IdRef="startTest_1">
            <ur:startTest.int_in_ReportId>
              <InArgument x:TypeArguments="x:Int32">
                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">str_reportID</CSharpValue>
              </InArgument>
            </ur:startTest.int_in_ReportId>
            <ur:startTest.str_in_SuiteId>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">str_suiteID</CSharpValue>
              </InArgument>
            </ur:startTest.str_in_SuiteId>
            <ur:startTest.str_in_testName>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">str_testName</CSharpValue>
              </InArgument>
            </ur:startTest.str_in_testName>
            <ur:startTest.str_out_TestId>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">str_testID</CSharpReference>
              </OutArgument>
            </ur:startTest.str_out_TestId>
          </ur:startTest>
          <Assign sap:VirtualizedContainerService.HintSize="873.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:List(x:String)">
                <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">output_differences</CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:List(x:String)">
                <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">new List&lt;string&gt;()</CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <ui:WriteTextFile File="{x:Null}" DisplayName="Write Text File" sap:VirtualizedContainerService.HintSize="873.6,166.4" sap2010:WorkflowViewState.IdRef="WriteTextFile_1">
            <ui:WriteTextFile.FileName>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">str_pdfTextfile</CSharpValue>
              </InArgument>
            </ui:WriteTextFile.FileName>
            <ui:WriteTextFile.Text>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_307">"PDF comparison result "+Environment.NewLine</CSharpValue>
              </InArgument>
            </ui:WriteTextFile.Text>
          </ui:WriteTextFile>
          <ap:GetPDFPageCount sap:VirtualizedContainerService.HintSize="873.6,174.4" sap2010:WorkflowViewState.IdRef="GetPDFPageCount_1">
            <ap:GetPDFPageCount.in_fileName>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">str_baselinePdf</CSharpValue>
              </InArgument>
            </ap:GetPDFPageCount.in_fileName>
            <ap:GetPDFPageCount.out_pageCount>
              <OutArgument x:TypeArguments="x:Int32">
                <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">int_baselinePDFcnt</CSharpReference>
              </OutArgument>
            </ap:GetPDFPageCount.out_pageCount>
          </ap:GetPDFPageCount>
          <If sap:VirtualizedContainerService.HintSize="873.6,11257.6" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_169">str_pdfpageNum.Equals("ALL")</CSharpValue>
              </InArgument>
            </If.Condition>
            <If.Then>
              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="840,6930.4" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each currentNumber" sap:VirtualizedContainerService.HintSize="806.4,6870.4" sap2010:WorkflowViewState.IdRef="ForEach`1_3">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:Int32">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Int32" Name="currentNumber" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="772.8,6732.8" sap2010:WorkflowViewState.IdRef="Sequence_13">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If sap:VirtualizedContainerService.HintSize="739.2,479.2" sap2010:WorkflowViewState.IdRef="If_15">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_304">currentNumber==4</CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,225.6" sap2010:WorkflowViewState.IdRef="Sequence_48">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382.4,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Warn">
                                <ui:LogMessage.Message>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_242">"Enter messge"</CSharpValue>
                                  </InArgument>
                                </ui:LogMessage.Message>
                              </ui:LogMessage>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,83.2" sap2010:WorkflowViewState.IdRef="Sequence_49">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                        <ap:ReadPDFText sap:VirtualizedContainerService.HintSize="739.2,226.4" sap2010:WorkflowViewState.IdRef="ReadPDFText_1">
                          <ap:ReadPDFText.in_fileName>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_106">str_baselinePdf</CSharpValue>
                            </InArgument>
                          </ap:ReadPDFText.in_fileName>
                          <ap:ReadPDFText.in_pageNumber>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_107">currentNumber.ToString()</CSharpValue>
                            </InArgument>
                          </ap:ReadPDFText.in_pageNumber>
                          <ap:ReadPDFText.out_pdftext>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_44">str_baselinePDFText</CSharpReference>
                            </OutArgument>
                          </ap:ReadPDFText.out_pdftext>
                        </ap:ReadPDFText>
                        <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="739.2,457.6" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                          <TryCatch.Try>
                            <ap:ReadPDFText sap:VirtualizedContainerService.HintSize="334.4,194.4" sap2010:WorkflowViewState.IdRef="ReadPDFText_2">
                              <ap:ReadPDFText.in_fileName>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_108">str_policyPDF</CSharpValue>
                                </InArgument>
                              </ap:ReadPDFText.in_fileName>
                              <ap:ReadPDFText.in_pageNumber>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_109">currentNumber.ToString()</CSharpValue>
                                </InArgument>
                              </ap:ReadPDFText.in_pageNumber>
                              <ap:ReadPDFText.out_pdftext>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_45">str_policyPDFText</CSharpReference>
                                </OutArgument>
                              </ap:ReadPDFText.out_pdftext>
                            </ap:ReadPDFText>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="739.2,311.2" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="512,200.8" sap2010:WorkflowViewState.IdRef="Sequence_25">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.4,140.8" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                                <ui:MultipleAssign.AssignOperations>
                                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="s:String[]">
                                          <CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_27">out_str1_array</CSharpReference>
                                        </OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="s:String[]">
                                          <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44">str_baselinePDFText.Split(" ".ToCharArray())</CSharpValue>
                                        </InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                  </scg:List>
                                </ui:MultipleAssign.AssignOperations>
                              </ui:MultipleAssign>
                            </Sequence>
                          </ui:CommentOut.Body>
                        </ui:CommentOut>
                        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="739.2,149.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_7">
                          <ui:MultipleAssign.AssignOperations>
                            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="s:String[]">
                                    <CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_51">out_str1_array</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="s:String[]">
                                    <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_119">str_baselinePDFText.Split(Environment.NewLine.ToCharArray())</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                            </scg:List>
                          </ui:MultipleAssign.AssignOperations>
                        </ui:MultipleAssign>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="739.2,311.2" sap2010:WorkflowViewState.IdRef="CommentOut_7">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="512,200.8" sap2010:WorkflowViewState.IdRef="Sequence_26">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.4,140.8" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                                <ui:MultipleAssign.AssignOperations>
                                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="s:String[]">
                                          <CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_28">out_str2_array</CSharpReference>
                                        </OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="s:String[]">
                                          <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">str_policyPDFText.Split(" ".ToCharArray())</CSharpValue>
                                        </InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                  </scg:List>
                                </ui:MultipleAssign.AssignOperations>
                              </ui:MultipleAssign>
                            </Sequence>
                          </ui:CommentOut.Body>
                        </ui:CommentOut>
                        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="739.2,149.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_8">
                          <ui:MultipleAssign.AssignOperations>
                            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="s:String[]">
                                    <CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_52">out_str2_array</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="s:String[]">
                                    <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_121">str_policyPDFText.Split(Environment.NewLine.ToCharArray())</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                            </scg:List>
                          </ui:MultipleAssign.AssignOperations>
                        </ui:MultipleAssign>
                        <If sap:VirtualizedContainerService.HintSize="739.2,4512" sap2010:WorkflowViewState.IdRef="If_4">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_136">str_baselinePDFText.CompareTo(str_policyPDFText) != 0</CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="705.6,4116" sap2010:WorkflowViewState.IdRef="Sequence_9">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="672,113.6" sap2010:WorkflowViewState.IdRef="Assign_21">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="scg:List(x:String)">
                                    <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_65">output_differences</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="scg:List(x:String)">
                                    <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_164">out_str1_array.Except(out_str2_array).ToList()</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="672,113.6" sap2010:WorkflowViewState.IdRef="Assign_22">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="scg:List(x:String)">
                                    <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_67">output_policyDifferences</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="scg:List(x:String)">
                                    <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_170">out_str2_array.Except(out_str1_array).ToList()</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="672,3069.6" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <TryCatch.Try>
                                  <If sap:VirtualizedContainerService.HintSize="635.2,2806.4" sap2010:WorkflowViewState.IdRef="If_13">
                                    <If.Condition>
                                      <InArgument x:TypeArguments="x:Boolean">
                                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_210">output_differences.Count() &gt; 0 || output_policyDifferences.Count() &gt; 0</CSharpValue>
                                      </InArgument>
                                    </If.Condition>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="601.6,2338.4" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ad:GetPolicyFormFooter sap:VirtualizedContainerService.HintSize="568,226.4" sap2010:WorkflowViewState.IdRef="GetPolicyFormFooter_5">
                                          <ad:GetPolicyFormFooter.in_footerFormat>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_212">str_policyFooter</CSharpValue>
                                            </InArgument>
                                          </ad:GetPolicyFormFooter.in_footerFormat>
                                          <ad:GetPolicyFormFooter.in_policyText>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_211">str_baselinePDFText</CSharpValue>
                                            </InArgument>
                                          </ad:GetPolicyFormFooter.in_policyText>
                                          <ad:GetPolicyFormFooter.out_formFooter>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_76">str_policyFormNumber</CSharpReference>
                                            </OutArgument>
                                          </ad:GetPolicyFormFooter.out_formFooter>
                                        </ad:GetPolicyFormFooter>
                                        <ui:InterruptibleWhile CurrentIndex="{x:Null}" DisplayName="While" sap:VirtualizedContainerService.HintSize="568,849.6" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_11">
                                          <ui:InterruptibleWhile.Body>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="534.4,703.2" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="500.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_51">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">
                                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_100">str_expectedPDFresult</CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_289">str_expectedPDFresult+"|"+output_differences[int_differences]</CSharpValue>
                                                  </InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <If sap:VirtualizedContainerService.HintSize="500.8,424.8" sap2010:WorkflowViewState.IdRef="If_18">
                                                <If.Condition>
                                                  <InArgument x:TypeArguments="x:Boolean">
                                                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_305">int_differences == 0</CSharpValue>
                                                  </InArgument>
                                                </If.Condition>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If.Then>
                                                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_52">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">
                                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_103">str_expectedPDFresult</CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_295">str_expectedPDFresult.Replace("|","")</CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                              <Assign sap:VirtualizedContainerService.HintSize="500.8,104.8" sap2010:WorkflowViewState.IdRef="Assign_53">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">
                                                    <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_109">int_differences</CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">
                                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_303">int_differences+1</CSharpValue>
                                                  </InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </ui:InterruptibleWhile.Body>
                                          <ui:InterruptibleWhile.Condition>
                                            <CSharpValue x:TypeArguments="x:Boolean" DisplayName="C sharp value" sap2010:WorkflowViewState.IdRef="CSharpValue`1_293" xml:space="preserve">int_differences &lt;  output_differences.Count()</CSharpValue>
                                          </ui:InterruptibleWhile.Condition>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:InterruptibleWhile>
                                        <ui:InterruptibleWhile CurrentIndex="{x:Null}" DisplayName="While" sap:VirtualizedContainerService.HintSize="568,84.8" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_12">
                                          <ui:InterruptibleWhile.Body>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="534.4,703.2" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="500.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_56">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">
                                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_104">str_actualResult</CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_296">str_actualResult+"|"+output_policyDifferences[int_policyDiff]</CSharpValue>
                                                  </InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <If sap:VirtualizedContainerService.HintSize="500.8,424.8" sap2010:WorkflowViewState.IdRef="If_19">
                                                <If.Condition>
                                                  <InArgument x:TypeArguments="x:Boolean">
                                                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_297">int_policyDiff ==0</CSharpValue>
                                                  </InArgument>
                                                </If.Condition>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If.Then>
                                                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_57">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">
                                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_105">str_actualResult</CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_298">str_actualResult.Replace("|","")</CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                              <Assign sap:VirtualizedContainerService.HintSize="500.8,104.8" sap2010:WorkflowViewState.IdRef="Assign_58">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">
                                                    <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_106">int_policyDiff</CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">
                                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_299">int_policyDiff+1</CSharpValue>
                                                  </InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </ui:InterruptibleWhile.Body>
                                          <ui:InterruptibleWhile.Condition>
                                            <CSharpValue x:TypeArguments="x:Boolean" DisplayName="C sharp value" sap2010:WorkflowViewState.IdRef="CSharpValue`1_300" xml:space="preserve">int_policyDiff &lt;  output_policyDifferences.Count()</CSharpValue>
                                          </ui:InterruptibleWhile.Condition>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:InterruptibleWhile>
                                        <ui:AppendLine File="{x:Null}" DisplayName="Append Line" sap:VirtualizedContainerService.HintSize="568,166.4" sap2010:WorkflowViewState.IdRef="AppendLine_7" UseDefaultEncoding="False">
                                          <ui:AppendLine.FileName>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_314">str_pdfTextfile</CSharpValue>
                                            </InArgument>
                                          </ui:AppendLine.FileName>
                                          <ui:AppendLine.Text>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_316">Environment.NewLine+"Page Number::"+currentNumber.ToString()+"-"+str_policyFormNumber+Environment.NewLine+Environment.NewLine+"Expected(ContorlPDF):"+str_expectedPDFresult+Environment.NewLine+Environment.NewLine+"Actual (TestPDF):"+str_actualResult+Environment.NewLine+"----------------------x----------------------------x--------------------------x-----------------------------x--------------------------------------x--------------------------------x"</CSharpValue>
                                            </InArgument>
                                          </ui:AppendLine.Text>
                                        </ui:AppendLine>
                                        <ur:failedStep sap:VirtualizedContainerService.HintSize="568,278.4" sap2010:WorkflowViewState.IdRef="failedStep_6" str_in_expectedStep="The PDF result should match from base file to policy file">
                                          <ur:failedStep.str_in_actualStep>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_302">"The PDF content didn't match"+"Page Number:"+currentNumber.ToString()+"-"+"Expected(ControlPDF):"+str_expectedPDFresult+Environment.NewLine+"Actual(TestPDF): "+str_actualResult</CSharpValue>
                                            </InArgument>
                                          </ur:failedStep.str_in_actualStep>
                                          <ur:failedStep.str_in_reportId>
                                            <InArgument x:TypeArguments="x:Int32">
                                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_216">str_reportID</CSharpValue>
                                            </InArgument>
                                          </ur:failedStep.str_in_reportId>
                                          <ur:failedStep.str_in_testId>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_217">str_testID</CSharpValue>
                                            </InArgument>
                                          </ur:failedStep.str_in_testId>
                                        </ur:failedStep>
                                        <Assign sap:VirtualizedContainerService.HintSize="568,113.6" sap2010:WorkflowViewState.IdRef="Assign_29">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="scg:List(x:String)">
                                              <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_77">output_differences</CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="scg:List(x:String)">
                                              <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_218">null</CSharpValue>
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="568,113.6" sap2010:WorkflowViewState.IdRef="Assign_30">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="scg:List(x:String)">
                                              <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_78">output_policyDifferences</CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="scg:List(x:String)">
                                              <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_219">null</CSharpValue>
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="568,113.6" sap2010:WorkflowViewState.IdRef="Assign_54">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_107">str_actualResult</CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">
                                              <Literal x:TypeArguments="x:String" Value="" />
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="568,113.6" sap2010:WorkflowViewState.IdRef="Assign_55">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_108">str_expectedPDFresult</CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">
                                              <Literal x:TypeArguments="x:String" Value="" />
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="568,113.6" sap2010:WorkflowViewState.IdRef="Assign_59">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">
                                              <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_110">int_differences</CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="568,104.8" sap2010:WorkflowViewState.IdRef="Assign_60">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">
                                              <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_111">int_policyDiff</CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,329.6" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ur:passedStep sap:VirtualizedContainerService.HintSize="382.4,269.6" sap2010:WorkflowViewState.IdRef="passedStep_10" str_in_expectedStep="The PDF result should  match from base file to policy file">
                                          <ur:passedStep.str_in_actualStep>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_220">"PDF text matched as expected, page number "+currentNumber.ToString()</CSharpValue>
                                            </InArgument>
                                          </ur:passedStep.str_in_actualStep>
                                          <ur:passedStep.str_in_reportId>
                                            <InArgument x:TypeArguments="x:Int32">
                                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_221">str_reportID</CSharpValue>
                                            </InArgument>
                                          </ur:passedStep.str_in_reportId>
                                          <ur:passedStep.str_in_testId>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_222">str_testID</CSharpValue>
                                            </InArgument>
                                          </ur:passedStep.str_in_testId>
                                        </ur:passedStep>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </TryCatch.Try>
                                <TryCatch.Catches>
                                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="638.4,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ActivityAction x:TypeArguments="s:Exception">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                      </ActivityAction.Argument>
                                    </ActivityAction>
                                  </Catch>
                                </TryCatch.Catches>
                              </TryCatch>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="672,246.4" sap2010:WorkflowViewState.IdRef="CommentOut_12">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416,136" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If sap:VirtualizedContainerService.HintSize="382.4,76" sap2010:WorkflowViewState.IdRef="If_10">
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_171">output_differences.Equals(output_policyDifferences)</CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,136" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="354,48" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <TryCatch.Try>
                                              <If sap:VirtualizedContainerService.HintSize="530,1376.6666666666667" sap2010:WorkflowViewState.IdRef="If_11">
                                                <If.Condition>
                                                  <InArgument x:TypeArguments="x:Boolean">
                                                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_176">output_differences.Count() &gt; 0</CSharpValue>
                                                  </InArgument>
                                                </If.Condition>
                                                <If.Then>
                                                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,876" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ad:GetPolicyFormFooter sap:VirtualizedContainerService.HintSize="434,229.33333333333334" sap2010:WorkflowViewState.IdRef="GetPolicyFormFooter_3">
                                                      <ad:GetPolicyFormFooter.in_footerFormat>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_178">str_policyFooter</CSharpValue>
                                                        </InArgument>
                                                      </ad:GetPolicyFormFooter.in_footerFormat>
                                                      <ad:GetPolicyFormFooter.in_policyText>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_177">str_baselinePDFText</CSharpValue>
                                                        </InArgument>
                                                      </ad:GetPolicyFormFooter.in_policyText>
                                                      <ad:GetPolicyFormFooter.out_formFooter>
                                                        <OutArgument x:TypeArguments="x:String">
                                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_71">str_policyFormNumber</CSharpReference>
                                                        </OutArgument>
                                                      </ad:GetPolicyFormFooter.out_formFooter>
                                                    </ad:GetPolicyFormFooter>
                                                    <ui:AppendLine File="{x:Null}" DisplayName="Append Line" sap:VirtualizedContainerService.HintSize="434,168.66666666666666" sap2010:WorkflowViewState.IdRef="AppendLine_4" UseDefaultEncoding="False">
                                                      <ui:AppendLine.FileName>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_179">str_pdfTextfile</CSharpValue>
                                                        </InArgument>
                                                      </ui:AppendLine.FileName>
                                                      <ui:AppendLine.Text>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_180">Environment.NewLine+"Page Number::"+currentNumber.ToString()+"-"+str_policyFormNumber+Environment.NewLine+String.Join("",output_differences)</CSharpValue>
                                                        </InArgument>
                                                      </ui:AppendLine.Text>
                                                    </ui:AppendLine>
                                                    <ur:failedStep sap:VirtualizedContainerService.HintSize="434,282" sap2010:WorkflowViewState.IdRef="failedStep_4" str_in_expectedStep="The PDF result should match from base file to policy file">
                                                      <ur:failedStep.str_in_actualStep>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_181">"The PDF content didn't match"+"Page Number:"+currentNumber.ToString()+"-"+String.Join("",output_differences)</CSharpValue>
                                                        </InArgument>
                                                      </ur:failedStep.str_in_actualStep>
                                                      <ur:failedStep.str_in_reportId>
                                                        <InArgument x:TypeArguments="x:Int32">
                                                          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_182">str_reportID</CSharpValue>
                                                        </InArgument>
                                                      </ur:failedStep.str_in_reportId>
                                                      <ur:failedStep.str_in_testId>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_183">str_testID</CSharpValue>
                                                        </InArgument>
                                                      </ur:failedStep.str_in_testId>
                                                    </ur:failedStep>
                                                    <Assign sap:VirtualizedContainerService.HintSize="434,108" sap2010:WorkflowViewState.IdRef="Assign_26">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="scg:List(x:String)">
                                                          <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_72">output_differences</CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="scg:List(x:String)">
                                                          <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_184">null</CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,360.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ur:passedStep sap:VirtualizedContainerService.HintSize="354,272.6666666666667" sap2010:WorkflowViewState.IdRef="passedStep_6" str_in_expectedStep="The PDF result should  match from base file to policy file">
                                                      <ur:passedStep.str_in_actualStep>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_185">"PDF text matched as expected, page number "+currentNumber.ToString()</CSharpValue>
                                                        </InArgument>
                                                      </ur:passedStep.str_in_actualStep>
                                                      <ur:passedStep.str_in_reportId>
                                                        <InArgument x:TypeArguments="x:Int32">
                                                          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_186">str_reportID</CSharpValue>
                                                        </InArgument>
                                                      </ur:passedStep.str_in_reportId>
                                                      <ur:passedStep.str_in_testId>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_187">str_testID</CSharpValue>
                                                        </InArgument>
                                                      </ur:passedStep.str_in_testId>
                                                    </ur:passedStep>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="534.6666666666666,23.333333333333332" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ActivityAction x:TypeArguments="s:Exception">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                  </ActivityAction.Argument>
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                            <TryCatch.Finally>
                                              <ur:passedStep sap:VirtualizedContainerService.HintSize="334,250" sap2010:WorkflowViewState.IdRef="passedStep_7" str_in_expectedStep="The PDF result should  match from base file to policy file">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ur:passedStep.str_in_actualStep>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_188">"PDF text matched as expected, page number "+currentNumber.ToString()</CSharpValue>
                                                  </InArgument>
                                                </ur:passedStep.str_in_actualStep>
                                                <ur:passedStep.str_in_reportId>
                                                  <InArgument x:TypeArguments="x:Int32">
                                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_189">str_reportID</CSharpValue>
                                                  </InArgument>
                                                </ur:passedStep.str_in_reportId>
                                                <ur:passedStep.str_in_testId>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_190">str_testID</CSharpValue>
                                                  </InArgument>
                                                </ur:passedStep.str_in_testId>
                                              </ur:passedStep>
                                            </TryCatch.Finally>
                                          </TryCatch>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,136" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="354,48" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <TryCatch.Try>
                                              <If sap:VirtualizedContainerService.HintSize="530,1494" sap2010:WorkflowViewState.IdRef="If_12">
                                                <If.Condition>
                                                  <InArgument x:TypeArguments="x:Boolean">
                                                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_191">output_differences.Count() &gt; 0 || output_policyDifferences.Count() &gt; 0</CSharpValue>
                                                  </InArgument>
                                                </If.Condition>
                                                <If.Then>
                                                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,993.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ad:GetPolicyFormFooter sap:VirtualizedContainerService.HintSize="434,229.33333333333334" sap2010:WorkflowViewState.IdRef="GetPolicyFormFooter_4">
                                                      <ad:GetPolicyFormFooter.in_footerFormat>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_193">str_policyFooter</CSharpValue>
                                                        </InArgument>
                                                      </ad:GetPolicyFormFooter.in_footerFormat>
                                                      <ad:GetPolicyFormFooter.in_policyText>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_192">str_baselinePDFText</CSharpValue>
                                                        </InArgument>
                                                      </ad:GetPolicyFormFooter.in_policyText>
                                                      <ad:GetPolicyFormFooter.out_formFooter>
                                                        <OutArgument x:TypeArguments="x:String">
                                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_73">str_policyFormNumber</CSharpReference>
                                                        </OutArgument>
                                                      </ad:GetPolicyFormFooter.out_formFooter>
                                                    </ad:GetPolicyFormFooter>
                                                    <ui:AppendLine File="{x:Null}" DisplayName="Append Line" sap:VirtualizedContainerService.HintSize="434,168.66666666666666" sap2010:WorkflowViewState.IdRef="AppendLine_5" UseDefaultEncoding="False">
                                                      <ui:AppendLine.FileName>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_194">str_pdfTextfile</CSharpValue>
                                                        </InArgument>
                                                      </ui:AppendLine.FileName>
                                                      <ui:AppendLine.Text>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_208">Environment.NewLine+"Page Number::"+currentNumber.ToString()+"-"+str_policyFormNumber+Environment.NewLine+"Expected:"+String.Join("",output_differences)+Environment.NewLine+"Actual::"+String.Join("",output_policyDifferences)</CSharpValue>
                                                        </InArgument>
                                                      </ui:AppendLine.Text>
                                                    </ui:AppendLine>
                                                    <ur:failedStep sap:VirtualizedContainerService.HintSize="434,282" sap2010:WorkflowViewState.IdRef="failedStep_5" str_in_expectedStep="The PDF result should match from base file to policy file">
                                                      <ur:failedStep.str_in_actualStep>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_209">"The PDF content didn't match"+"Page Number:"+currentNumber.ToString()+"-"+"Expected:"+String.Join("",output_differences)+Environment.NewLine+"Actual: "+String.Join("",output_policyDifferences)</CSharpValue>
                                                        </InArgument>
                                                      </ur:failedStep.str_in_actualStep>
                                                      <ur:failedStep.str_in_reportId>
                                                        <InArgument x:TypeArguments="x:Int32">
                                                          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_197">str_reportID</CSharpValue>
                                                        </InArgument>
                                                      </ur:failedStep.str_in_reportId>
                                                      <ur:failedStep.str_in_testId>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_198">str_testID</CSharpValue>
                                                        </InArgument>
                                                      </ur:failedStep.str_in_testId>
                                                    </ur:failedStep>
                                                    <Assign sap:VirtualizedContainerService.HintSize="434,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_27">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="scg:List(x:String)">
                                                          <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_74">output_differences</CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="scg:List(x:String)">
                                                          <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_199">null</CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign sap:VirtualizedContainerService.HintSize="434,108" sap2010:WorkflowViewState.IdRef="Assign_28">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="scg:List(x:String)">
                                                          <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_75">output_policyDifferences</CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="scg:List(x:String)">
                                                          <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_207">null</CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,360.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ur:passedStep sap:VirtualizedContainerService.HintSize="354,272.6666666666667" sap2010:WorkflowViewState.IdRef="passedStep_8" str_in_expectedStep="The PDF result should  match from base file to policy file">
                                                      <ur:passedStep.str_in_actualStep>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_200">"PDF text matched as expected, page number "+currentNumber.ToString()</CSharpValue>
                                                        </InArgument>
                                                      </ur:passedStep.str_in_actualStep>
                                                      <ur:passedStep.str_in_reportId>
                                                        <InArgument x:TypeArguments="x:Int32">
                                                          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_201">str_reportID</CSharpValue>
                                                        </InArgument>
                                                      </ur:passedStep.str_in_reportId>
                                                      <ur:passedStep.str_in_testId>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_202">str_testID</CSharpValue>
                                                        </InArgument>
                                                      </ur:passedStep.str_in_testId>
                                                    </ur:passedStep>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="534.6666666666666,23.333333333333332" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ActivityAction x:TypeArguments="s:Exception">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                  </ActivityAction.Argument>
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                            <TryCatch.Finally>
                                              <ur:passedStep sap:VirtualizedContainerService.HintSize="334,250" sap2010:WorkflowViewState.IdRef="passedStep_9" str_in_expectedStep="The PDF result should  match from base file to policy file">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ur:passedStep.str_in_actualStep>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_203">"PDF text matched as expected, page number "+currentNumber.ToString()</CSharpValue>
                                                  </InArgument>
                                                </ur:passedStep.str_in_actualStep>
                                                <ur:passedStep.str_in_reportId>
                                                  <InArgument x:TypeArguments="x:Int32">
                                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_204">str_reportID</CSharpValue>
                                                  </InArgument>
                                                </ur:passedStep.str_in_reportId>
                                                <ur:passedStep.str_in_testId>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_205">str_testID</CSharpValue>
                                                  </InArgument>
                                                </ur:passedStep.str_in_testId>
                                              </ur:passedStep>
                                            </TryCatch.Finally>
                                          </TryCatch>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </ui:CommentOut.Body>
                              </ui:CommentOut>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="672,246.4" sap2010:WorkflowViewState.IdRef="CommentOut_11">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416,136" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:InterruptibleWhile CurrentIndex="{x:Null}" DisplayName="While" sap:VirtualizedContainerService.HintSize="382.4,76" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_2">
                                      <ui:InterruptibleWhile.Body>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="688,1132.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InterruptibleWhile CurrentIndex="{x:Null}" DisplayName="While" sap:VirtualizedContainerService.HintSize="626,936.6666666666666" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_3">
                                            <ui:InterruptibleWhile.Body>
                                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="592,788.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="530,180" sap2010:WorkflowViewState.IdRef="MultipleAssign_9">
                                                  <ui:MultipleAssign.AssignOperations>
                                                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                                                        <ui:AssignOperation.To>
                                                          <OutArgument x:TypeArguments="x:String">
                                                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_60">str_baselieRowtext</CSharpReference>
                                                          </OutArgument>
                                                        </ui:AssignOperation.To>
                                                        <ui:AssignOperation.Value>
                                                          <InArgument x:TypeArguments="x:String">
                                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_155">out_str1_array[int_basedocIterator].ToString().Trim()</CSharpValue>
                                                          </InArgument>
                                                        </ui:AssignOperation.Value>
                                                      </ui:AssignOperation>
                                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                                                        <ui:AssignOperation.To>
                                                          <OutArgument x:TypeArguments="x:String">
                                                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_61">str_policyRowtext</CSharpReference>
                                                          </OutArgument>
                                                        </ui:AssignOperation.To>
                                                        <ui:AssignOperation.Value>
                                                          <InArgument x:TypeArguments="x:String">
                                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_156">out_str2_array[int_basedocIterator].ToString().Trim()</CSharpValue>
                                                          </InArgument>
                                                        </ui:AssignOperation.Value>
                                                      </ui:AssignOperation>
                                                    </scg:List>
                                                  </ui:MultipleAssign.AssignOperations>
                                                </ui:MultipleAssign>
                                                <If sap:VirtualizedContainerService.HintSize="530,520.6666666666666" sap2010:WorkflowViewState.IdRef="If_9">
                                                  <If.Condition>
                                                    <InArgument x:TypeArguments="x:Boolean">
                                                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_157">str_baselieRowtext.Equals(str_policyRowtext)</CSharpValue>
                                                    </InArgument>
                                                  </If.Condition>
                                                  <If.Then>
                                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,104.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="496,253.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <Assign sap:VirtualizedContainerService.HintSize="434,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_18">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="scg:List(x:String)">
                                                            <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_62">output_differences</CSharpReference>
                                                          </OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="scg:List(x:String)">
                                                            <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_159">new List&lt;string&gt; { "Expected: " + str_baselieRowtext + Environment.NewLine + "Actual: " + str_policyRowtext }</CSharpValue>
                                                          </InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <ui:Break sap:VirtualizedContainerService.HintSize="434,48" sap2010:WorkflowViewState.IdRef="Break_1" />
                                                    </Sequence>
                                                  </If.Else>
                                                </If>
                                              </Sequence>
                                            </ui:InterruptibleWhile.Body>
                                            <ui:InterruptibleWhile.Condition>
                                              <CSharpValue x:TypeArguments="x:Boolean" DisplayName="C sharp value" sap2010:WorkflowViewState.IdRef="CSharpValue`1_160">int_basedocIterator &lt; out_str2_array.Count()</CSharpValue>
                                            </ui:InterruptibleWhile.Condition>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:InterruptibleWhile>
                                          <Assign sap:VirtualizedContainerService.HintSize="626,108" sap2010:WorkflowViewState.IdRef="Assign_19">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">
                                                <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_63">int_basedocIterator</CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">
                                                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_161">int_basedocIterator+1</CSharpValue>
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:InterruptibleWhile.Body>
                                      <ui:InterruptibleWhile.Condition>
                                        <CSharpValue x:TypeArguments="x:Boolean" DisplayName="C sharp value" sap2010:WorkflowViewState.IdRef="CSharpValue`1_153">int_basedocIterator &lt; out_str1_array.Count()</CSharpValue>
                                      </ui:InterruptibleWhile.Condition>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InterruptibleWhile>
                                  </Sequence>
                                </ui:CommentOut.Body>
                              </ui:CommentOut>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="672,266.4" sap2010:WorkflowViewState.IdRef="CommentOut_10">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_16">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="scg:List(x:String)">
                                          <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_50">output_differences</CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="scg:List(x:String)">
                                          <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_115">out_str1_array.Except(out_str2_array).ToList()</CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </ui:CommentOut.Body>
                              </ui:CommentOut>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,225.6" sap2010:WorkflowViewState.IdRef="Sequence_10">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382.4,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info">
                                <ui:LogMessage.Message>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_105">"No differences has been found for the page "+currentNumber.ToString()</CSharpValue>
                                  </InArgument>
                                </ui:LogMessage.Message>
                              </ui:LogMessage>
                            </Sequence>
                          </If.Else>
                        </If>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="739.2,76" sap2010:WorkflowViewState.IdRef="CommentOut_13">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="470.4,374.4" sap2010:WorkflowViewState.IdRef="Sequence_67">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="436.8,314.4" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <TryCatch.Try>
                                  <If sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="If_5">
                                    <If.Condition>
                                      <InArgument x:TypeArguments="x:Boolean">
                                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_175">output_differences.Count() &gt; 0 || output_policyDifferences.Count() &gt; 0</CSharpValue>
                                      </InArgument>
                                    </If.Condition>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,836" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ad:GetPolicyFormFooter sap:VirtualizedContainerService.HintSize="433.6,226.4" sap2010:WorkflowViewState.IdRef="GetPolicyFormFooter_2">
                                          <ad:GetPolicyFormFooter.in_footerFormat>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_166">str_policyFooter</CSharpValue>
                                            </InArgument>
                                          </ad:GetPolicyFormFooter.in_footerFormat>
                                          <ad:GetPolicyFormFooter.in_policyText>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_165">str_baselinePDFText</CSharpValue>
                                            </InArgument>
                                          </ad:GetPolicyFormFooter.in_policyText>
                                          <ad:GetPolicyFormFooter.out_formFooter>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_66">str_policyFormNumber</CSharpReference>
                                            </OutArgument>
                                          </ad:GetPolicyFormFooter.out_formFooter>
                                        </ad:GetPolicyFormFooter>
                                        <ui:AppendLine File="{x:Null}" DisplayName="Append Line" sap:VirtualizedContainerService.HintSize="433.6,166.4" sap2010:WorkflowViewState.IdRef="AppendLine_2" UseDefaultEncoding="False">
                                          <ui:AppendLine.FileName>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">str_pdfTextfile</CSharpValue>
                                            </InArgument>
                                          </ui:AppendLine.FileName>
                                          <ui:AppendLine.Text>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_167">Environment.NewLine+"Page Number::"+currentNumber.ToString()+"-"+str_policyFormNumber+Environment.NewLine+String.Join("",output_differences)</CSharpValue>
                                            </InArgument>
                                          </ui:AppendLine.Text>
                                        </ui:AppendLine>
                                        <ur:failedStep sap:VirtualizedContainerService.HintSize="433.6,278.4" sap2010:WorkflowViewState.IdRef="failedStep_2" str_in_expectedStep="The PDF result should match from base file to policy file">
                                          <ur:failedStep.str_in_actualStep>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_168">"The PDF content didn't match"+"Page Number:"+currentNumber.ToString()+"-"+String.Join("",output_differences)</CSharpValue>
                                            </InArgument>
                                          </ur:failedStep.str_in_actualStep>
                                          <ur:failedStep.str_in_reportId>
                                            <InArgument x:TypeArguments="x:Int32">
                                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">str_reportID</CSharpValue>
                                            </InArgument>
                                          </ur:failedStep.str_in_reportId>
                                          <ur:failedStep.str_in_testId>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">str_testID</CSharpValue>
                                            </InArgument>
                                          </ur:failedStep.str_in_testId>
                                        </ur:failedStep>
                                        <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_15">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="scg:List(x:String)">
                                              <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_49">output_differences</CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="scg:List(x:String)">
                                              <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_114">null</CSharpValue>
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,329.6" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ur:passedStep sap:VirtualizedContainerService.HintSize="382.4,269.6" sap2010:WorkflowViewState.IdRef="passedStep_2" str_in_expectedStep="The PDF result should  match from base file to policy file">
                                          <ur:passedStep.str_in_actualStep>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_54">"PDF text matched as expected, page number "+currentNumber.ToString()</CSharpValue>
                                            </InArgument>
                                          </ur:passedStep.str_in_actualStep>
                                          <ur:passedStep.str_in_reportId>
                                            <InArgument x:TypeArguments="x:Int32">
                                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">str_reportID</CSharpValue>
                                            </InArgument>
                                          </ur:passedStep.str_in_reportId>
                                          <ur:passedStep.str_in_testId>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_56">str_testID</CSharpValue>
                                            </InArgument>
                                          </ur:passedStep.str_in_testId>
                                        </ur:passedStep>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </TryCatch.Try>
                                <TryCatch.Catches>
                                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ActivityAction x:TypeArguments="s:Exception">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                      </ActivityAction.Argument>
                                    </ActivityAction>
                                  </Catch>
                                </TryCatch.Catches>
                                <TryCatch.Finally>
                                  <ur:passedStep sap:VirtualizedContainerService.HintSize="334,250" sap2010:WorkflowViewState.IdRef="passedStep_5" str_in_expectedStep="The PDF result should  match from base file to policy file">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ur:passedStep.str_in_actualStep>
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_131">"PDF text matched as expected, page number "+currentNumber.ToString()</CSharpValue>
                                      </InArgument>
                                    </ur:passedStep.str_in_actualStep>
                                    <ur:passedStep.str_in_reportId>
                                      <InArgument x:TypeArguments="x:Int32">
                                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_132">str_reportID</CSharpValue>
                                      </InArgument>
                                    </ur:passedStep.str_in_reportId>
                                    <ur:passedStep.str_in_testId>
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_133">str_testID</CSharpValue>
                                      </InArgument>
                                    </ur:passedStep.str_in_testId>
                                  </ur:passedStep>
                                </TryCatch.Finally>
                              </TryCatch>
                            </Sequence>
                          </ui:CommentOut.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:CommentOut>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <ui:ForEach.Values>
                    <InArgument x:TypeArguments="sc:IEnumerable">
                      <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">Enumerable.Range(1,int_baselinePDFcnt)</CSharpValue>
                    </InArgument>
                  </ui:ForEach.Values>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="668.8,4165.6" sap2010:WorkflowViewState.IdRef="Sequence_14">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ap:ReadPDFText sap:VirtualizedContainerService.HintSize="635.2,226.4" sap2010:WorkflowViewState.IdRef="ReadPDFText_3">
                  <ap:ReadPDFText.in_fileName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_137">str_baselinePdf</CSharpValue>
                    </InArgument>
                  </ap:ReadPDFText.in_fileName>
                  <ap:ReadPDFText.in_pageNumber>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_138">str_pdfpageNum.ToString()</CSharpValue>
                    </InArgument>
                  </ap:ReadPDFText.in_pageNumber>
                  <ap:ReadPDFText.out_pdftext>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_54">str_baselinePDFText</CSharpReference>
                    </OutArgument>
                  </ap:ReadPDFText.out_pdftext>
                </ap:ReadPDFText>
                <ap:ReadPDFText sap:VirtualizedContainerService.HintSize="635.2,226.4" sap2010:WorkflowViewState.IdRef="ReadPDFText_4">
                  <ap:ReadPDFText.in_fileName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_139">str_policyPDF</CSharpValue>
                    </InArgument>
                  </ap:ReadPDFText.in_fileName>
                  <ap:ReadPDFText.in_pageNumber>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_141">str_pdfpageNum.ToString()</CSharpValue>
                    </InArgument>
                  </ap:ReadPDFText.in_pageNumber>
                  <ap:ReadPDFText.out_pdftext>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_55">str_policyPDFText</CSharpReference>
                    </OutArgument>
                  </ap:ReadPDFText.out_pdftext>
                </ap:ReadPDFText>
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="635.2,246.4" sap2010:WorkflowViewState.IdRef="CommentOut_8">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416,136" sap2010:WorkflowViewState.IdRef="Sequence_27">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ap:ReadPDFTextWithOCR sap:VirtualizedContainerService.HintSize="382.4,76" sap2010:WorkflowViewState.IdRef="ReadPDFTextWithOCR_5">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ap:ReadPDFTextWithOCR.in_fileName>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_57">str_baselinePageoutput</CSharpValue>
                          </InArgument>
                        </ap:ReadPDFTextWithOCR.in_fileName>
                        <ap:ReadPDFTextWithOCR.in_pageNumber>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_97">str_pdfpageNum</CSharpValue>
                          </InArgument>
                        </ap:ReadPDFTextWithOCR.in_pageNumber>
                        <ap:ReadPDFTextWithOCR.out_pdfText>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_30">str_baselinePDFText</CSharpReference>
                          </OutArgument>
                        </ap:ReadPDFTextWithOCR.out_pdfText>
                      </ap:ReadPDFTextWithOCR>
                    </Sequence>
                  </ui:CommentOut.Body>
                </ui:CommentOut>
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="635.2,246.4" sap2010:WorkflowViewState.IdRef="CommentOut_9">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416,136" sap2010:WorkflowViewState.IdRef="Sequence_28">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ap:ReadPDFTextWithOCR sap:VirtualizedContainerService.HintSize="382.4,76" sap2010:WorkflowViewState.IdRef="ReadPDFTextWithOCR_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ap:ReadPDFTextWithOCR.in_fileName>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_58">str_policyPageoutput</CSharpValue>
                          </InArgument>
                        </ap:ReadPDFTextWithOCR.in_fileName>
                        <ap:ReadPDFTextWithOCR.in_pageNumber>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_98">str_pdfpageNum</CSharpValue>
                          </InArgument>
                        </ap:ReadPDFTextWithOCR.in_pageNumber>
                        <ap:ReadPDFTextWithOCR.out_pdfText>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_31">str_policyPDFText</CSharpReference>
                          </OutArgument>
                        </ap:ReadPDFTextWithOCR.out_pdfText>
                      </ap:ReadPDFTextWithOCR>
                    </Sequence>
                  </ui:CommentOut.Body>
                </ui:CommentOut>
                <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="635.2,149.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="s:String[]">
                            <CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_32">out_str1_array</CSharpReference>
                          </OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="s:String[]">
                            <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_143">str_baselinePDFText.Split(Environment.NewLine.ToCharArray())</CSharpValue>
                          </InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                </ui:MultipleAssign>
                <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="635.2,149.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="s:String[]">
                            <CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_33">out_str2_array</CSharpReference>
                          </OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="s:String[]">
                            <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_243">str_policyPDFText.Split(Environment.NewLine.ToCharArray())</CSharpValue>
                          </InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                </ui:MultipleAssign>
                <If sap:VirtualizedContainerService.HintSize="635.2,538.4" sap2010:WorkflowViewState.IdRef="If_6">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_142">str_baselinePDFText.CompareTo(str_policyPDFText) != 0</CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,278.4" sap2010:WorkflowViewState.IdRef="Sequence_15">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_7">
                        <Assign.To>
                          <OutArgument x:TypeArguments="scg:List(x:String)">
                            <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_34">output_differences</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="scg:List(x:String)">
                            <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_244">out_str1_array.Except(out_str2_array).ToList()</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_31">
                        <Assign.To>
                          <OutArgument x:TypeArguments="scg:List(x:String)">
                            <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_79">output_policyDifferences</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="scg:List(x:String)">
                            <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_245">out_str2_array.Except(out_str1_array).ToList()</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_16">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <If sap:VirtualizedContainerService.HintSize="635.2,2322.4" sap2010:WorkflowViewState.IdRef="If_7">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_236">output_differences.Count() &gt; 0 || output_policyDifferences.Count() &gt; 0</CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="601.6,1656.8" sap2010:WorkflowViewState.IdRef="Sequence_17">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ad:GetPolicyFormFooter sap:VirtualizedContainerService.HintSize="568,226.4" sap2010:WorkflowViewState.IdRef="GetPolicyFormFooter_1">
                        <ad:GetPolicyFormFooter.in_footerFormat>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_150">str_policyFooter</CSharpValue>
                          </InArgument>
                        </ad:GetPolicyFormFooter.in_footerFormat>
                        <ad:GetPolicyFormFooter.in_policyText>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_149">str_baselinePDFText</CSharpValue>
                          </InArgument>
                        </ad:GetPolicyFormFooter.in_policyText>
                        <ad:GetPolicyFormFooter.out_formFooter>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_59">str_policyFormNumber</CSharpReference>
                          </OutArgument>
                        </ad:GetPolicyFormFooter.out_formFooter>
                      </ad:GetPolicyFormFooter>
                      <ui:InterruptibleWhile CurrentIndex="{x:Null}" DisplayName="While" sap:VirtualizedContainerService.HintSize="568,849.6" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_9">
                        <ui:InterruptibleWhile.Body>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="534.4,703.2" sap2010:WorkflowViewState.IdRef="Sequence_55">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="500.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_45">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_93">str_expectedPDFresult</CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_275">str_expectedPDFresult+"|"+output_differences[int_differences]</CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <If sap:VirtualizedContainerService.HintSize="500.8,424.8" sap2010:WorkflowViewState.IdRef="If_16">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_281">int_differences ==0</CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_49">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_98">str_expectedPDFresult</CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_282">str_expectedPDFresult.Replace("|","")</CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Sequence>
                              </If.Else>
                            </If>
                            <Assign sap:VirtualizedContainerService.HintSize="500.8,104.8" sap2010:WorkflowViewState.IdRef="Assign_47">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">
                                  <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_96">int_differences</CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">
                                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_273">int_differences+1</CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ui:InterruptibleWhile.Body>
                        <ui:InterruptibleWhile.Condition>
                          <CSharpValue x:TypeArguments="x:Boolean" DisplayName="C sharp value" sap2010:WorkflowViewState.IdRef="CSharpValue`1_268">int_differences &lt; output_differences.Count()</CSharpValue>
                        </ui:InterruptibleWhile.Condition>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InterruptibleWhile>
                      <ui:InterruptibleWhile CurrentIndex="{x:Null}" DisplayName="While" sap:VirtualizedContainerService.HintSize="568,84.8" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_10">
                        <ui:InterruptibleWhile.Body>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="592,786" sap2010:WorkflowViewState.IdRef="Sequence_56">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="530,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_46">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_95">str_actualResult</CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_276">str_actualResult+"|"+output_policyDifferences[int_policyDiff]</CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <If sap:VirtualizedContainerService.HintSize="530,472.6666666666667" sap2010:WorkflowViewState.IdRef="If_17">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_283">int_policyDiff ==0</CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,196" sap2010:WorkflowViewState.IdRef="Sequence_59">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="434,108" sap2010:WorkflowViewState.IdRef="Assign_50">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_99">str_actualResult</CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_284">str_actualResult.Replace("|","")</CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,104.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Sequence>
                              </If.Else>
                            </If>
                            <Assign sap:VirtualizedContainerService.HintSize="530,108" sap2010:WorkflowViewState.IdRef="Assign_48">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">
                                  <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_97">int_policyDiff</CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">
                                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_274">int_policyDiff+1</CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ui:InterruptibleWhile.Body>
                        <ui:InterruptibleWhile.Condition>
                          <CSharpValue x:TypeArguments="x:Boolean" DisplayName="C sharp value" sap2010:WorkflowViewState.IdRef="CSharpValue`1_270" xml:space="preserve">int_policyDiff &lt;  output_policyDifferences.Count()</CSharpValue>
                        </ui:InterruptibleWhile.Condition>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InterruptibleWhile>
                      <ui:AppendLine File="{x:Null}" DisplayName="Append Line" sap:VirtualizedContainerService.HintSize="568,166.4" sap2010:WorkflowViewState.IdRef="AppendLine_3" UseDefaultEncoding="False">
                        <ui:AppendLine.FileName>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">str_pdfTextfile</CSharpValue>
                          </InArgument>
                        </ui:AppendLine.FileName>
                        <ui:AppendLine.Text>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_313">Environment.NewLine+"Page Number::"+str_pdfpageNum.ToString()+"-"+str_policyFormNumber+Environment.NewLine+Environment.NewLine+"Expected(ContorlPDF):"+str_expectedPDFresult+Environment.NewLine+Environment.NewLine+"Actual (TestPDF):"+str_actualResult+Environment.NewLine+"----------------------x----------------------------x--------------------------x-----------------------------x--------------------------------------x--------------------------------x"</CSharpValue>
                          </InArgument>
                        </ui:AppendLine.Text>
                      </ui:AppendLine>
                      <ur:failedStep sap:VirtualizedContainerService.HintSize="568,269.6" sap2010:WorkflowViewState.IdRef="failedStep_3" str_in_expectedStep="The PDF result should match from base file to policy file">
                        <ur:failedStep.str_in_actualStep>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_287">"The PDF content didn't match"+Environment.NewLine+"Page Number::"+str_pdfpageNum.ToString()+"-"+str_policyFormNumber+Environment.NewLine+"Expected(ContorlPDF):"+str_expectedPDFresult+Environment.NewLine+"Actual(TestPDF) :"+str_actualResult</CSharpValue>
                          </InArgument>
                        </ur:failedStep.str_in_actualStep>
                        <ur:failedStep.str_in_reportId>
                          <InArgument x:TypeArguments="x:Int32">
                            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67">str_reportID</CSharpValue>
                          </InArgument>
                        </ur:failedStep.str_in_reportId>
                        <ur:failedStep.str_in_testId>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_68">str_testID</CSharpValue>
                          </InArgument>
                        </ur:failedStep.str_in_testId>
                      </ur:failedStep>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,504" sap2010:WorkflowViewState.IdRef="Sequence_18">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382.4,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info">
                        <ui:LogMessage.Message>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_312">"if 2"</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Message>
                      </ui:LogMessage>
                      <ur:passedStep sap:VirtualizedContainerService.HintSize="382.4,269.6" sap2010:WorkflowViewState.IdRef="passedStep_3" str_in_expectedStep="The PDF result should  match from base file to policy file">
                        <ur:passedStep.str_in_actualStep>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_74">"PDF text matched as expected, page number "+str_pdfpageNum.ToString()</CSharpValue>
                          </InArgument>
                        </ur:passedStep.str_in_actualStep>
                        <ur:passedStep.str_in_reportId>
                          <InArgument x:TypeArguments="x:Int32">
                            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_70">str_reportID</CSharpValue>
                          </InArgument>
                        </ur:passedStep.str_in_reportId>
                        <ur:passedStep.str_in_testId>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_71">str_testID</CSharpValue>
                          </InArgument>
                        </ur:passedStep.str_in_testId>
                      </ur:passedStep>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="910.4,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>